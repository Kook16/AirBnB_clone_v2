#!/usr/bin/python3
'''Fabric script that distributes an archive to my web servers'''
from fabric.api import env, put, sudo, task, runs_once, run, local
from datetime import datetime
from os import path

env.hosts = ['34.207.155.182', '18.204.14.80']
env.user = 'ubuntu'
env.key_filename = '/home/kok/.ssh/id_rsa'

@task
def do_pack():
    '''function that generates a .tar archive'''
    date = datetime.now().strftime('%Y%m%d%H%M%S')
    archive_name = f'web_static_{date}.tgz'
    try:
        local('mkdir -p version')
        local(f'tar -czvf version/{archive_name} web_static')
        return f'versions/{archive_name}'
    except Exception:
        return None


@task
def do_deploy(archive_path):
    '''Deploy func'''
    if not path.isfile(archive_path):
        return False
    try:
        arch_tgz = archive_path.split("/")[-1]
        arch = arch_tgz.split(".")[0]
        # arch_dir = "/data/web_static/releases/{}/".format(arch)
        arch_dir = '/data/web_static/releases/' + arch + '/'

        put(archive_path, "/tmp/")
        run("sudo mkdir -p {}".format(arch_dir))
        run("sudo tar -xzf /tmp/{} -C {}".format(arch_tgz, arch_dir))
        run("sudo rm /tmp/{}".format(arch_tgz))
        run("sudo mv {}web_static/* {}".format(arch_dir, arch_dir))
        run("sudo rm -rf {}web_static".format(arch_dir))
        run("sudo rm -rf /data/web_static/current")
        run("sudo ln -s {} /data/web_static/current".format(arch_dir))

        print("New version deployed!")
        return True

    except Exception:
        return False


@task
@runs_once
def deploy():
    '''Create and distribute an archive to web server
    '''
    try:
        # cal the do_pack() and store the path of the created archive
        archive_path = do_pack()

        # return false if no archive has been created
        if not archive_path:
            return False
        
        # Call the do_deploy(archive_path) function
        return do_deploy(archive_path)
    except Exception:
        return False
